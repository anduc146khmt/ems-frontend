{"ast":null,"code":"import _objectSpread from \"/home/ducan1406/Documents/kiran_EMS/Online-Examination-System/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/ducan1406/Documents/kiran_EMS/Online-Examination-System/frontend/src/components/trainer/newquestion/newquestion.js\";\nimport React, { Component } from 'react';\nimport './newquestion.css';\nimport { Form, Input, Button, Select, Row, Col, Checkbox, Modal, Upload, Icon, InputNumber } from 'antd';\nimport { connect } from 'react-redux';\nimport { ChangeQuestionConfirmDirty, ChangeQuestionTableData, ChangeQuestionModalState } from '../../../actions/trainerAction';\nimport { SecurePost } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport Alert from '../../../components/common/alert';\nimport auth from '../../../services/AuthServices';\n\nclass NewQuestion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addfifthOption = e => {\n      this.setState((previousState, previousProps) => {\n        return {\n          fifthoptioAddButtonVisible: false,\n          questionDetails: _objectSpread({}, previousState.questionDetails, {\n            options: [...previousState.questionDetails.options, {\n              image: null,\n              body: null,\n              isAnswer: false\n            }]\n          })\n        };\n      });\n    };\n\n    this.Customalert = () => {\n      Modal.confirm({\n        title: 'Confirm',\n        content: 'empty option can not be set as answer',\n        okText: 'I understand',\n        cancelText: null\n      });\n    };\n\n    this.OptionTextChange = (e, i) => {\n      var newOptions = [...this.state.questionDetails.options];\n      newOptions[i] = _objectSpread({}, this.state.questionDetails.options[i], {\n        body: e.target.value\n      });\n\n      if ((newOptions[i].image === 'undefined' || newOptions[i].image === undefined || newOptions[i].image === null || newOptions[i].image === 'null') && (newOptions[i].body === 'undefined' || newOptions[i].body === undefined || newOptions[i].body === 'null' || newOptions[i].body === '' || newOptions[i].body === null)) {\n        newOptions[i] = _objectSpread({}, this.state.questionDetails.options[i], {\n          isAnswer: false\n        });\n        this.setState((ps, pp) => {\n          return {\n            questionDetails: _objectSpread({}, ps.questionDetails, {\n              options: newOptions\n            })\n          };\n        });\n      }\n\n      this.setState((ps, pp) => {\n        return {\n          questionDetails: _objectSpread({}, ps.questionDetails, {\n            options: newOptions\n          })\n        };\n      });\n    };\n\n    this.AnswerOptionSwitch = (e, i) => {\n      if (this.state.questionDetails.options[i].body !== '' && this.state.questionDetails.options[i].body !== null || this.state.questionDetails.options[i].image !== null && this.state.questionDetails.options[i].image !== 'undefined' && this.state.questionDetails.options[i].image !== undefined) {\n        var newOptions = [...this.state.questionDetails.options];\n        newOptions[i] = _objectSpread({}, this.state.questionDetails.options[i], {\n          isAnswer: e.target.checked\n        });\n        this.setState((ps, pp) => {\n          return {\n            questionDetails: _objectSpread({}, ps.questionDetails, {\n              options: newOptions\n            })\n          };\n        });\n      } else {\n        this.Customalert();\n        return;\n      }\n    };\n\n    this.OptionImageonChange = (f, i) => {\n      var newOptions = [...this.state.questionDetails.options];\n\n      if (!f) {\n        delete newOptions[i].image;\n        newOptions[i].image = null;\n      } else {\n        newOptions[i] = _objectSpread({}, this.state.questionDetails.options[i], {\n          image: \"\".concat(apis.BASE, \"/\").concat(f.link)\n        });\n      }\n\n      this.setState({\n        submitDisabled: false\n      });\n\n      if ((newOptions[i].image === 'undefined' || newOptions[i].image === undefined || newOptions[i].image === null || newOptions[i].image === 'null') && (newOptions[i].body === 'undefined' || newOptions[i].body === undefined || newOptions[i].body === 'null' || newOptions[i].body === '' || newOptions[i].body === null)) {\n        newOptions[i] = _objectSpread({}, this.state.questionDetails.options[i], {\n          isAnswer: false\n        });\n      }\n\n      this.setState((ps, pp) => {\n        return {\n          questionDetails: _objectSpread({}, ps.questionDetails, {\n            options: newOptions\n          })\n        };\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        console.log(values);\n\n        if (!err) {\n          var f = 1;\n          var ans = 0;\n          var opts = [];\n          console.log('Received values of form: ', values);\n          this.state.questionDetails.options.forEach((element, i) => {\n            opts.push({\n              optbody: element.body,\n              optimg: element.image,\n              isAnswer: element.isAnswer\n            });\n\n            if ((element.image === 'undefined' || element.image === undefined || element.image === null || element.image === 'null') && (element.body === '' || element.body === null || element.body === 'null' || element.body === 'undefined' || element.body === undefined)) {\n              f = 0;\n            }\n\n            if (element.isAnswer) {\n              ans = ans + 1;\n            }\n          });\n\n          if (f) {\n            if (!ans) {\n              Alert('warning', 'Warning!', 'There must be atleast one right answer');\n            } else {\n              this.setState({\n                adding: true\n              });\n              SecurePost({\n                url: apis.CREATE_QUESTIONS,\n                data: {\n                  body: values.questionbody,\n                  options: opts,\n                  quesimg: this.state.questionDetails.questionimage,\n                  subject: values.subject,\n                  explanation: values.explanation,\n                  weightage: values.waitage\n                }\n              }).then(response => {\n                console.log(response);\n                this.setState({\n                  adding: false\n                });\n\n                if (response.data.success) {\n                  this.props.ChangeQuestionModalState(false);\n                  Alert('success', 'Success', response.data.message);\n                  this.props.ChangeQuestionTableData(this.props.trainer.selectedSubjects);\n                } else {\n                  this.props.ChangeQuestionModalState(false);\n                  this.props.form.resetFields();\n                  return Alert('warning', 'Warning!', response.data.message);\n                }\n              }).catch(error => {\n                console.log(error);\n                this.props.form.resetFields();\n                this.setState({\n                  adding: false,\n                  questionDetails: {\n                    questionimage: null,\n                    options: [{\n                      image: null,\n                      body: null,\n                      isAnswer: false\n                    }, {\n                      image: null,\n                      body: null,\n                      isAnswer: false\n                    }, {\n                      image: null,\n                      body: null,\n                      isAnswer: false\n                    }, {\n                      image: null,\n                      body: null,\n                      isAnswer: false\n                    }]\n                  }\n                });\n                this.props.ChangeQuestionModalState(false);\n                return Alert('error', 'Error!', 'Server Error');\n              });\n            }\n          } else {\n            Alert('warning', 'Warning!', 'Please fill all the options');\n          }\n        }\n      });\n    };\n\n    this.changeqImage = f => {\n      this.setState((ps, pp) => {\n        return {\n          questionDetails: _objectSpread({}, ps.questionDetails, {\n            questionimage: f.link ? \"\".concat(apis.BASE, \"/\").concat(f.link) : null\n          }),\n          submitDisabled: false\n        };\n      });\n    };\n\n    this.upl = () => {\n      this.setState({\n        submitDisabled: true\n      });\n    };\n\n    this.state = {\n      questionDetails: {\n        questionimage: null,\n        options: [{\n          image: null,\n          body: null,\n          isAnswer: false\n        }, {\n          image: null,\n          body: null,\n          isAnswer: false\n        }, {\n          image: null,\n          body: null,\n          isAnswer: false\n        }, {\n          image: null,\n          body: null,\n          isAnswer: false\n        }]\n      },\n      adding: false,\n      submitDisabled: false,\n      fifthoptioAddButtonVisible: true\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const Option = Select.Option;\n    const TextArea = Input.TextArea;\n    var QuestionImageprops = {\n      name: 'file',\n      action: \"\".concat(apis.BASE).concat(apis.FILE_UPLOAD, \"?Token=\").concat(auth.retriveToken()),\n      listType: 'picture'\n    };\n    return React.createElement(\"div\", {\n      className: \"register-subject-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"register-trainer-form-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Subject\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, getFieldDecorator('subject', {\n      rules: [{\n        required: true,\n        message: 'Please select any subject!'\n      }]\n    })(React.createElement(Select, {\n      showSearch: true,\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Select a subject\",\n      optionFilterProp: \"s\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, this.props.admin.subjectTableData.map((d, i) => React.createElement(Option, {\n      key: d._id,\n      s: d.topic,\n      value: d._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, d.topic))))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Topic\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, getFieldDecorator('topicbody', {\n      rules: [{\n        required: true,\n        message: 'Please choose topic!'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Question\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, getFieldDecorator('questionbody', {\n      rules: [{\n        required: true,\n        message: 'Please type question!'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 6,\n      style: {\n        padding: '0px 20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Question Image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, React.createElement(Upload, Object.assign({}, QuestionImageprops, {\n      beforeUpload: this.upl,\n      onRemove: this.changeqImage,\n      onSuccess: this.changeqImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }), \" Upload\"))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 18,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Explanation\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, getFieldDecorator('explanation', {\n      rules: [{\n        required: true,\n        message: 'Please type Explanation for the answers!'\n      }]\n    })(React.createElement(TextArea, {\n      onChange: this.ExplanationChange,\n      rows: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      offset: 2,\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Weightage\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, getFieldDecorator('waitage', {\n      rules: [{\n        required: true,\n        message: 'Please enter the marks'\n      }]\n    })(React.createElement(InputNumber, {\n      min: 1,\n      max: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        paddingTop: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, this.state.questionDetails.options.map((option, i) => {\n      return React.createElement(Row, {\n        key: i,\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, React.createElement(Col, {\n        offset: 1,\n        span: 13,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"option\".concat(i + 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, React.createElement(TextArea, {\n        value: this.state.questionDetails.options[i].body,\n        onChange: e => this.OptionTextChange(e, i),\n        rows: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        offset: 2,\n        span: 6,\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"Option\".concat(i + 1, \" Image\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(Upload, Object.assign({}, QuestionImageprops, {\n        beforeUpload: this.upl,\n        onRemove: f => this.OptionImageonChange(null, i),\n        onSuccess: f => this.OptionImageonChange(f, i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }), \" Upload\")))), React.createElement(Col, {\n        span: 2,\n        style: {\n          padding: '55px 10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: this.state.questionDetails.options[i].isAnswer,\n        onChange: e => this.AnswerOptionSwitch(e, i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }))));\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, this.state.fifthoptioAddButtonVisible ? React.createElement(Button, {\n      type: \"primary\",\n      onClick: e => this.addfifthOption(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, \"Add 5th option\") : null)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, React.createElement(Col, {\n      offset: 20,\n      span: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      disabled: this.state.submitDisabled,\n      loading: this.state.adding,\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, \"Create Question\"))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  trainer: state.trainer,\n  admin: state.admin\n});\n\nconst NewQuestionForm = Form.create({\n  name: 'newQuestion'\n})(NewQuestion);\nexport default connect(mapStateToProps, {\n  ChangeQuestionConfirmDirty,\n  ChangeQuestionModalState,\n  ChangeQuestionTableData\n})(NewQuestionForm);","map":{"version":3,"sources":["/home/ducan1406/Documents/kiran_EMS/Online-Examination-System/frontend/src/components/trainer/newquestion/newquestion.js"],"names":["React","Component","Form","Input","Button","Select","Row","Col","Checkbox","Modal","Upload","Icon","InputNumber","connect","ChangeQuestionConfirmDirty","ChangeQuestionTableData","ChangeQuestionModalState","SecurePost","apis","Alert","auth","NewQuestion","constructor","props","addfifthOption","e","setState","previousState","previousProps","fifthoptioAddButtonVisible","questionDetails","options","image","body","isAnswer","Customalert","confirm","title","content","okText","cancelText","OptionTextChange","i","newOptions","state","target","value","undefined","ps","pp","AnswerOptionSwitch","checked","OptionImageonChange","f","BASE","link","submitDisabled","handleSubmit","preventDefault","form","validateFieldsAndScroll","err","values","console","log","ans","opts","forEach","element","push","optbody","optimg","adding","url","CREATE_QUESTIONS","data","questionbody","quesimg","questionimage","subject","explanation","weightage","waitage","then","response","success","message","trainer","selectedSubjects","resetFields","catch","error","changeqImage","upl","render","getFieldDecorator","Option","TextArea","QuestionImageprops","name","action","FILE_UPLOAD","retriveToken","listType","rules","required","width","admin","subjectTableData","map","d","_id","topic","padding","ExplanationChange","paddingTop","option","textAlign","mapStateToProps","NewQuestionForm","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './newquestion.css';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Modal,\r\n  Upload,\r\n  Icon,\r\n  InputNumber,\r\n} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  ChangeQuestionConfirmDirty,\r\n  ChangeQuestionTableData,\r\n  ChangeQuestionModalState,\r\n} from '../../../actions/trainerAction';\r\nimport { SecurePost } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../../components/common/alert';\r\nimport auth from '../../../services/AuthServices';\r\n\r\nclass NewQuestion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questionDetails: {\r\n        questionimage: null,\r\n        options: [\r\n          {\r\n            image: null,\r\n            body: null,\r\n            isAnswer: false,\r\n          },\r\n          {\r\n            image: null,\r\n            body: null,\r\n            isAnswer: false,\r\n          },\r\n          {\r\n            image: null,\r\n            body: null,\r\n            isAnswer: false,\r\n          },\r\n          {\r\n            image: null,\r\n            body: null,\r\n            isAnswer: false,\r\n          },\r\n        ],\r\n      },\r\n      adding: false,\r\n      submitDisabled: false,\r\n      fifthoptioAddButtonVisible: true,\r\n    };\r\n  }\r\n\r\n  addfifthOption = (e) => {\r\n    this.setState((previousState, previousProps) => {\r\n      return {\r\n        fifthoptioAddButtonVisible: false,\r\n        questionDetails: {\r\n          ...previousState.questionDetails,\r\n          options: [\r\n            ...previousState.questionDetails.options,\r\n            {\r\n              image: null,\r\n              body: null,\r\n              isAnswer: false,\r\n            },\r\n          ],\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  Customalert = () => {\r\n    Modal.confirm({\r\n      title: 'Confirm',\r\n      content: 'empty option can not be set as answer',\r\n      okText: 'I understand',\r\n      cancelText: null,\r\n    });\r\n  };\r\n\r\n  OptionTextChange = (e, i) => {\r\n    var newOptions = [...this.state.questionDetails.options];\r\n    newOptions[i] = {\r\n      ...this.state.questionDetails.options[i],\r\n      body: e.target.value,\r\n    };\r\n    if (\r\n      (newOptions[i].image === 'undefined' ||\r\n        newOptions[i].image === undefined ||\r\n        newOptions[i].image === null ||\r\n        newOptions[i].image === 'null') &&\r\n      (newOptions[i].body === 'undefined' ||\r\n        newOptions[i].body === undefined ||\r\n        newOptions[i].body === 'null' ||\r\n        newOptions[i].body === '' ||\r\n        newOptions[i].body === null)\r\n    ) {\r\n      newOptions[i] = {\r\n        ...this.state.questionDetails.options[i],\r\n        isAnswer: false,\r\n      };\r\n      this.setState((ps, pp) => {\r\n        return {\r\n          questionDetails: {\r\n            ...ps.questionDetails,\r\n            options: newOptions,\r\n          },\r\n        };\r\n      });\r\n    }\r\n    this.setState((ps, pp) => {\r\n      return {\r\n        questionDetails: {\r\n          ...ps.questionDetails,\r\n          options: newOptions,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  AnswerOptionSwitch = (e, i) => {\r\n    if (\r\n      (this.state.questionDetails.options[i].body !== '' &&\r\n        this.state.questionDetails.options[i].body !== null) ||\r\n      (this.state.questionDetails.options[i].image !== null &&\r\n        this.state.questionDetails.options[i].image !== 'undefined' &&\r\n        this.state.questionDetails.options[i].image !== undefined)\r\n    ) {\r\n      var newOptions = [...this.state.questionDetails.options];\r\n      newOptions[i] = {\r\n        ...this.state.questionDetails.options[i],\r\n        isAnswer: e.target.checked,\r\n      };\r\n      this.setState((ps, pp) => {\r\n        return {\r\n          questionDetails: {\r\n            ...ps.questionDetails,\r\n            options: newOptions,\r\n          },\r\n        };\r\n      });\r\n    } else {\r\n      this.Customalert();\r\n      return;\r\n    }\r\n  };\r\n\r\n  OptionImageonChange = (f, i) => {\r\n    var newOptions = [...this.state.questionDetails.options];\r\n    if (!f) {\r\n      delete newOptions[i].image;\r\n      newOptions[i].image = null;\r\n    } else {\r\n      newOptions[i] = {\r\n        ...this.state.questionDetails.options[i],\r\n        image: `${apis.BASE}/${f.link}`,\r\n      };\r\n    }\r\n    this.setState({\r\n      submitDisabled: false,\r\n    });\r\n    if (\r\n      (newOptions[i].image === 'undefined' ||\r\n        newOptions[i].image === undefined ||\r\n        newOptions[i].image === null ||\r\n        newOptions[i].image === 'null') &&\r\n      (newOptions[i].body === 'undefined' ||\r\n        newOptions[i].body === undefined ||\r\n        newOptions[i].body === 'null' ||\r\n        newOptions[i].body === '' ||\r\n        newOptions[i].body === null)\r\n    ) {\r\n      newOptions[i] = {\r\n        ...this.state.questionDetails.options[i],\r\n        isAnswer: false,\r\n      };\r\n    }\r\n    this.setState((ps, pp) => {\r\n      return {\r\n        questionDetails: {\r\n          ...ps.questionDetails,\r\n          options: newOptions,\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      console.log(values);\r\n      if (!err) {\r\n        var f = 1;\r\n        var ans = 0;\r\n        var opts = [];\r\n        console.log('Received values of form: ', values);\r\n        this.state.questionDetails.options.forEach((element, i) => {\r\n          opts.push({\r\n            optbody: element.body,\r\n            optimg: element.image,\r\n            isAnswer: element.isAnswer,\r\n          });\r\n          if (\r\n            (element.image === 'undefined' ||\r\n              element.image === undefined ||\r\n              element.image === null ||\r\n              element.image === 'null') &&\r\n            (element.body === '' ||\r\n              element.body === null ||\r\n              element.body === 'null' ||\r\n              element.body === 'undefined' ||\r\n              element.body === undefined)\r\n          ) {\r\n            f = 0;\r\n          }\r\n          if (element.isAnswer) {\r\n            ans = ans + 1;\r\n          }\r\n        });\r\n        if (f) {\r\n          if (!ans) {\r\n            Alert(\r\n              'warning',\r\n              'Warning!',\r\n              'There must be atleast one right answer'\r\n            );\r\n          } else {\r\n            this.setState({\r\n              adding: true,\r\n            });\r\n            SecurePost({\r\n              url: apis.CREATE_QUESTIONS,\r\n              data: {\r\n                body: values.questionbody,\r\n                options: opts,\r\n                quesimg: this.state.questionDetails.questionimage,\r\n                subject: values.subject,\r\n                explanation: values.explanation,\r\n                weightage: values.waitage,\r\n              },\r\n            })\r\n              .then((response) => {\r\n                console.log(response);\r\n                this.setState({\r\n                  adding: false,\r\n                });\r\n                if (response.data.success) {\r\n                  this.props.ChangeQuestionModalState(false);\r\n                  Alert('success', 'Success', response.data.message);\r\n                  this.props.ChangeQuestionTableData(\r\n                    this.props.trainer.selectedSubjects\r\n                  );\r\n                } else {\r\n                  this.props.ChangeQuestionModalState(false);\r\n                  this.props.form.resetFields();\r\n                  return Alert('warning', 'Warning!', response.data.message);\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n                this.props.form.resetFields();\r\n                this.setState({\r\n                  adding: false,\r\n                  questionDetails: {\r\n                    questionimage: null,\r\n                    options: [\r\n                      {\r\n                        image: null,\r\n                        body: null,\r\n                        isAnswer: false,\r\n                      },\r\n                      {\r\n                        image: null,\r\n                        body: null,\r\n                        isAnswer: false,\r\n                      },\r\n                      {\r\n                        image: null,\r\n                        body: null,\r\n                        isAnswer: false,\r\n                      },\r\n                      {\r\n                        image: null,\r\n                        body: null,\r\n                        isAnswer: false,\r\n                      },\r\n                    ],\r\n                  },\r\n                });\r\n                this.props.ChangeQuestionModalState(false);\r\n                return Alert('error', 'Error!', 'Server Error');\r\n              });\r\n          }\r\n        } else {\r\n          Alert('warning', 'Warning!', 'Please fill all the options');\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  changeqImage = (f) => {\r\n    this.setState((ps, pp) => {\r\n      return {\r\n        questionDetails: {\r\n          ...ps.questionDetails,\r\n          questionimage: f.link ? `${apis.BASE}/${f.link}` : null,\r\n        },\r\n        submitDisabled: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  upl = () => {\r\n    this.setState({\r\n      submitDisabled: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { Option } = Select;\r\n    const { TextArea } = Input;\r\n    var QuestionImageprops = {\r\n      name: 'file',\r\n      action: `${apis.BASE}${apis.FILE_UPLOAD}?Token=${auth.retriveToken()}`,\r\n      listType: 'picture',\r\n    };\r\n\r\n    return (\r\n      <div className=\"register-subject-form\">\r\n        <div className=\"register-trainer-form-body\">\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <div>\r\n              <Row>\r\n                <Col span={8}>\r\n                  <Form.Item label=\"Subject\" hasFeedback>\r\n                    {getFieldDecorator('subject', {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: 'Please select any subject!',\r\n                        },\r\n                      ],\r\n                    })(\r\n                      <Select\r\n                        showSearch\r\n                        style={{ width: '100%' }}\r\n                        placeholder=\"Select a subject\"\r\n                        optionFilterProp=\"s\">\r\n                        {this.props.admin.subjectTableData.map((d, i) => (\r\n                          <Option key={d._id} s={d.topic} value={d._id}>\r\n                            {d.topic}\r\n                          </Option>\r\n                        ))}\r\n                      </Select>\r\n                    )}\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span={6}>\r\n                  <Form.Item label=\"Topic\" hasFeedback>\r\n                    {getFieldDecorator('topicbody', {\r\n                      rules: [\r\n                        { required: true, message: 'Please choose topic!' },\r\n                      ],\r\n                    })(<TextArea rows={5} />)}\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span={18}>\r\n                  <Form.Item label=\"Question\" hasFeedback>\r\n                    {getFieldDecorator('questionbody', {\r\n                      rules: [\r\n                        { required: true, message: 'Please type question!' },\r\n                      ],\r\n                    })(<TextArea rows={5} />)}\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={6} style={{ padding: '0px 20px' }}>\r\n                  <Form.Item label=\"Question Image\">\r\n                    <Upload\r\n                      {...QuestionImageprops}\r\n                      beforeUpload={this.upl}\r\n                      onRemove={this.changeqImage}\r\n                      onSuccess={this.changeqImage}>\r\n                      <Button>\r\n                        <Icon type=\"upload\" /> Upload\r\n                      </Button>\r\n                    </Upload>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span={18}>\r\n                  <Form.Item label=\"Explanation\" hasFeedback>\r\n                    {getFieldDecorator('explanation', {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: 'Please type Explanation for the answers!',\r\n                        },\r\n                      ],\r\n                    })(<TextArea onChange={this.ExplanationChange} rows={3} />)}\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col offset={2} span={4}>\r\n                  <Form.Item label=\"Weightage\" hasFeedback>\r\n                    {getFieldDecorator('waitage', {\r\n                      rules: [\r\n                        { required: true, message: 'Please enter the marks' },\r\n                      ],\r\n                    })(<InputNumber min={1} max={2} />)}\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <div style={{ paddingTop: '20px' }}>\r\n                {this.state.questionDetails.options.map((option, i) => {\r\n                  return (\r\n                    <Row key={i} className=\"\">\r\n                      <Col offset={1} span={13}>\r\n                        <Form.Item label={`option${i + 1}`}>\r\n                          <TextArea\r\n                            value={this.state.questionDetails.options[i].body}\r\n                            onChange={(e) => this.OptionTextChange(e, i)}\r\n                            rows={3}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col offset={2} span={6} style={{ textAlign: 'center' }}>\r\n                        <Form.Item label={`Option${i + 1} Image`}>\r\n                          <Upload\r\n                            {...QuestionImageprops}\r\n                            beforeUpload={this.upl}\r\n                            onRemove={(f) => this.OptionImageonChange(null, i)}\r\n                            onSuccess={(f) => this.OptionImageonChange(f, i)}>\r\n                            <Button>\r\n                              <Icon type=\"upload\" /> Upload\r\n                            </Button>\r\n                          </Upload>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={2} style={{ padding: '55px 10px' }}>\r\n                        <Form.Item>\r\n                          <Checkbox\r\n                            checked={\r\n                              this.state.questionDetails.options[i].isAnswer\r\n                            }\r\n                            onChange={(e) =>\r\n                              this.AnswerOptionSwitch(e, i)\r\n                            }></Checkbox>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  );\r\n                })}\r\n              </div>\r\n              <Row>\r\n                <Col span={12}>\r\n                  {this.state.fifthoptioAddButtonVisible ? (\r\n                    <Button\r\n                      type=\"primary\"\r\n                      onClick={(e) => this.addfifthOption(e)}>\r\n                      Add 5th option\r\n                    </Button>\r\n                  ) : null}\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col offset={20} span={4}>\r\n                  <Form.Item>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      disabled={this.state.submitDisabled}\r\n                      loading={this.state.adding}\r\n                      block>\r\n                      Create Question\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  trainer: state.trainer,\r\n  admin: state.admin,\r\n});\r\n\r\nconst NewQuestionForm = Form.create({ name: 'newQuestion' })(NewQuestion);\r\n\r\nexport default connect(mapStateToProps, {\r\n  ChangeQuestionConfirmDirty,\r\n  ChangeQuestionModalState,\r\n  ChangeQuestionTableData,\r\n})(NewQuestionForm);\r\n"]},"metadata":{},"sourceType":"module"}