{"ast":null,"code":"import _objectSpread from \"/home/ducan1406/Documents/kiran_EMS/Online-Examination-System/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/ducan1406/Documents/kiran_EMS/Online-Examination-System/frontend/src/components/trainee/answersheet/answer.js\";\nimport React from 'react';\nimport { Table, Icon, Tag, Skeleton, Descriptions, Modal, Button, Row, Col } from 'antd';\nimport './answer.css';\nimport './answermobileview.css';\nimport './individualquestion_mobileview.css';\nimport { connect } from 'react-redux';\nimport { Post } from '../../../services/axiosCall';\nimport apis from '../../../services/Apis';\nimport Alert from '../../common/alert';\nimport { Typography } from 'antd';\nimport Feedback from './feedback';\nimport { FeedbackStatus } from '../../../actions/traineeAction';\nconst Title = Typography.Title;\n\nclass Answer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = () => {\n      this.setState({\n        Mvisible: false\n      });\n    };\n\n    this.OpenModel = qid => {\n      this.setState({\n        ActiveQuestionId: qid,\n        Mvisible: true\n      });\n    };\n\n    this.state = {\n      loading: false,\n      data: [],\n      TotalScore: null,\n      Mvisible: false,\n      ActiveQuestionId: null\n    };\n  }\n\n  componentDidMount() {\n    let _this$props$trainee = this.props.trainee,\n        traineeid = _this$props$trainee.traineeid,\n        testid = _this$props$trainee.testid;\n    this.setState({\n      loading: true\n    });\n    let p1 = Post({\n      url: apis.FETCH_OWN_RESULT,\n      data: {\n        userid: traineeid,\n        testid: testid\n      }\n    });\n    let p2 = Post({\n      url: \"\".concat(apis.FETCH_TRAINEE_TEST_QUESTION),\n      data: {\n        id: testid\n      }\n    });\n    let p3 = Post({\n      url: \"\".concat(apis.FEEDBACK_STATUS_CHECK),\n      data: {\n        userid: traineeid,\n        testid: testid\n      }\n    });\n    Promise.all([p1, p2, p3]).then(d => {\n      console.log(d);\n      this.setState({\n        loading: false\n      });\n\n      if (d[0].data.success && d[1].data.success) {\n        let v = d[1].data.data;\n        let r = d[0].data.result.result.map((dd, i) => {\n          return _objectSpread({}, dd, v[i]);\n        });\n        console.log(r);\n        this.setState({\n          data: r,\n          TotalScore: d[0].data.result.score\n        });\n\n        if (d[2].data.success) {\n          this.props.FeedbackStatus(d[2].data.status);\n        }\n      } else {\n        Alert('error', 'Error!', \"\".concat(d[0].data.success ? '' : d[0].data.message, \" and \").concat(d[1].data.success ? '' : d[1].data.message));\n      }\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        loading: false\n      });\n      Alert('error', 'Error!', 'Server Error');\n    });\n  }\n\n  render() {\n    const columns = [{\n      title: 'View Question',\n      key: 'action',\n      render: (text, record) => React.createElement(Button, {\n        shape: \"circle\",\n        icon: \"info\",\n        type: \"primary\",\n        size: \"small\",\n        onClick: () => {\n          this.OpenModel(text.qid);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })\n    }, {\n      title: 'Question',\n      dataIndex: 'body',\n      key: 'body'\n    }, {\n      title: 'Correct Answers',\n      key: 'correctAnswer',\n      dataIndex: 'correctAnswer',\n      render: tags => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, tags.map(tag => {\n        return React.createElement(Tag, {\n          color: \"green\",\n          key: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, tag.toUpperCase());\n      }))\n    }, {\n      title: 'Given Answers',\n      key: 'givenAnswer',\n      dataIndex: 'givenAnswer',\n      render: tags => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, tags.map(tag => {\n        return React.createElement(Tag, {\n          color: \"blue\",\n          key: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, tag.toUpperCase());\n      }))\n    }, {\n      title: 'Weightage',\n      dataIndex: 'weightage',\n      key: 'weightage'\n    }, {\n      title: 'Explanation',\n      dataIndex: 'explanation',\n      key: 'explanation'\n    }, {\n      title: 'Status',\n      dataIndex: 'iscorrect',\n      key: 'iscorrect',\n      render: tags => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, tags ? React.createElement(Icon, {\n        type: \"check-circle\",\n        theme: \"twoTone\",\n        twoToneColor: \"#52c41a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }) : React.createElement(Icon, {\n        type: \"close-circle\",\n        theme: \"twoTone\",\n        twoToneColor: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }))\n    }];\n    let td = this.props.trainee.traineeDetails;\n    return React.createElement(\"div\", {\n      className: \"answer-table-outer\",\n      style: {\n        width: '80%',\n        margin: 'auto',\n        padding: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Title, {\n      className: \"answer-table-heading\",\n      level: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Result\"), React.createElement(\"div\", {\n      className: \"answer-table-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Descriptions, {\n      bordered: true,\n      title: null,\n      border: true,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Descriptions.Item, {\n      label: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, td.name), React.createElement(Descriptions.Item, {\n      label: \"Email Id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, td.emailid), React.createElement(Descriptions.Item, {\n      label: \"Contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, td.contact), React.createElement(Descriptions.Item, {\n      label: \"Score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, this.state.TotalScore)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(Table, {\n      size: \"small\",\n      rowKey: \"qid\",\n      loading: this.state.loading,\n      columns: columns,\n      dataSource: this.state.data,\n      pagination: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), this.props.trainee.hasGivenFeedBack ? null : React.createElement(Feedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      destroyOnClose: true,\n      width: \"70%\",\n      style: {\n        top: '30px'\n      },\n      title: \"Question details\",\n      visible: this.state.Mvisible,\n      onOk: this.handleCancel,\n      onCancel: this.handleCancel,\n      footer: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(SingleQuestionDetails, {\n      qid: this.state.ActiveQuestionId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass SingleQuestionDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fetching: false,\n      qdetails: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      fetching: true\n    });\n    Post({\n      url: apis.FETCH_SINGLE_QUESTION_BY_TRAINEE,\n      data: {\n        qid: this.props.qid\n      }\n    }).then(response => {\n      console.log(response);\n\n      if (response.data.success) {\n        this.setState({\n          qdetails: response.data.data[0]\n        });\n      } else {\n        Alert('error', 'Error !', response.data.message);\n      }\n\n      this.setState({\n        fetching: false\n      });\n    }).catch(error => {\n      this.setState({\n        fetching: false\n      });\n      console.log(error);\n      Alert('error', 'Error !', 'Server Error');\n    });\n  }\n\n  render() {\n    const optn = ['A', 'B', 'C', 'D', 'E'];\n    let Optiondata = this.state.qdetails;\n\n    if (Optiondata !== null) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mainQuestionDetailsContaine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"questionDetailsBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, Optiondata.body), Optiondata.quesimg ? React.createElement(\"div\", {\n        className: \"questionDetailsImageContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"Unable to load\",\n        className: \"questionDetailsImage\",\n        src: Optiondata.quesimg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      })) : null, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, Optiondata.options.map((d, i) => {\n        return React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, React.createElement(Row, {\n          type: \"flex\",\n          justify: \"center\",\n          className: \"QuestionDetailsOptions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, React.createElement(Col, {\n          span: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }, d.isAnswer ? React.createElement(Button, {\n          className: \"green\",\n          shape: \"circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }, optn[i]) : React.createElement(Button, {\n          type: \"primary\",\n          shape: \"circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }, optn[i])), d.optimg ? React.createElement(Col, {\n          span: 6,\n          style: {\n            padding: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          alt: \"Unable to load\",\n          className: \"questionDetailsImage\",\n          src: d.optimg,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        })) : null, d.optimg ? React.createElement(Col, {\n          span: 14,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329\n          },\n          __self: this\n        }, d.optbody) : React.createElement(Col, {\n          span: 20,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        }, d.optbody)));\n      }))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"skeletor-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(Skeleton, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }), React.createElement(Skeleton, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  trainee: state.trainee\n});\n\nexport default connect(mapStateToProps, {\n  FeedbackStatus\n})(Answer);","map":{"version":3,"sources":["/home/ducan1406/Documents/kiran_EMS/Online-Examination-System/frontend/src/components/trainee/answersheet/answer.js"],"names":["React","Table","Icon","Tag","Skeleton","Descriptions","Modal","Button","Row","Col","connect","Post","apis","Alert","Typography","Feedback","FeedbackStatus","Title","Answer","Component","constructor","props","handleCancel","setState","Mvisible","OpenModel","qid","ActiveQuestionId","state","loading","data","TotalScore","componentDidMount","trainee","traineeid","testid","p1","url","FETCH_OWN_RESULT","userid","p2","FETCH_TRAINEE_TEST_QUESTION","id","p3","FEEDBACK_STATUS_CHECK","Promise","all","then","d","console","log","success","v","r","result","map","dd","i","score","status","message","catch","err","render","columns","title","key","text","record","dataIndex","tags","tag","toUpperCase","td","traineeDetails","width","margin","padding","name","emailid","contact","hasGivenFeedBack","top","SingleQuestionDetails","fetching","qdetails","FETCH_SINGLE_QUESTION_BY_TRAINEE","response","error","optn","Optiondata","body","quesimg","options","isAnswer","optimg","optbody","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Table,\r\n  Icon,\r\n  Tag,\r\n  Skeleton,\r\n  Descriptions,\r\n  Modal,\r\n  Button,\r\n  Row,\r\n  Col,\r\n} from 'antd';\r\nimport './answer.css';\r\nimport './answermobileview.css';\r\nimport './individualquestion_mobileview.css';\r\nimport { connect } from 'react-redux';\r\nimport { Post } from '../../../services/axiosCall';\r\nimport apis from '../../../services/Apis';\r\nimport Alert from '../../common/alert';\r\nimport { Typography } from 'antd';\r\nimport Feedback from './feedback';\r\nimport { FeedbackStatus } from '../../../actions/traineeAction';\r\n\r\nconst { Title } = Typography;\r\n\r\nclass Answer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      data: [],\r\n      TotalScore: null,\r\n      Mvisible: false,\r\n      ActiveQuestionId: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { traineeid, testid } = this.props.trainee;\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    let p1 = Post({\r\n      url: apis.FETCH_OWN_RESULT,\r\n      data: {\r\n        userid: traineeid,\r\n        testid: testid,\r\n      },\r\n    });\r\n    let p2 = Post({\r\n      url: `${apis.FETCH_TRAINEE_TEST_QUESTION}`,\r\n      data: {\r\n        id: testid,\r\n      },\r\n    });\r\n    let p3 = Post({\r\n      url: `${apis.FEEDBACK_STATUS_CHECK}`,\r\n      data: {\r\n        userid: traineeid,\r\n        testid: testid,\r\n      },\r\n    });\r\n    Promise.all([p1, p2, p3])\r\n      .then((d) => {\r\n        console.log(d);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        if (d[0].data.success && d[1].data.success) {\r\n          let v = d[1].data.data;\r\n          let r = d[0].data.result.result.map((dd, i) => {\r\n            return {\r\n              ...dd,\r\n              ...v[i],\r\n            };\r\n          });\r\n          console.log(r);\r\n          this.setState({\r\n            data: r,\r\n            TotalScore: d[0].data.result.score,\r\n          });\r\n          if (d[2].data.success) {\r\n            this.props.FeedbackStatus(d[2].data.status);\r\n          }\r\n        } else {\r\n          Alert(\r\n            'error',\r\n            'Error!',\r\n            `${d[0].data.success ? '' : d[0].data.message} and ${\r\n              d[1].data.success ? '' : d[1].data.message\r\n            }`\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        Alert('error', 'Error!', 'Server Error');\r\n      });\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      Mvisible: false,\r\n    });\r\n  };\r\n  OpenModel = (qid) => {\r\n    this.setState({\r\n      ActiveQuestionId: qid,\r\n      Mvisible: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: 'View Question',\r\n        key: 'action',\r\n        render: (text, record) => (\r\n          <Button\r\n            shape=\"circle\"\r\n            icon=\"info\"\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              this.OpenModel(text.qid);\r\n            }}></Button>\r\n        ),\r\n      },\r\n      {\r\n        title: 'Question',\r\n        dataIndex: 'body',\r\n        key: 'body',\r\n      },\r\n      {\r\n        title: 'Correct Answers',\r\n        key: 'correctAnswer',\r\n        dataIndex: 'correctAnswer',\r\n        render: (tags) => (\r\n          <span>\r\n            {tags.map((tag) => {\r\n              return (\r\n                <Tag color=\"green\" key={tag}>\r\n                  {tag.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        title: 'Given Answers',\r\n        key: 'givenAnswer',\r\n        dataIndex: 'givenAnswer',\r\n        render: (tags) => (\r\n          <span>\r\n            {tags.map((tag) => {\r\n              return (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        title: 'Weightage',\r\n        dataIndex: 'weightage',\r\n        key: 'weightage',\r\n      },\r\n      {\r\n        title: 'Explanation',\r\n        dataIndex: 'explanation',\r\n        key: 'explanation',\r\n      },\r\n      {\r\n        title: 'Status',\r\n        dataIndex: 'iscorrect',\r\n        key: 'iscorrect',\r\n        render: (tags) => (\r\n          <span>\r\n            {tags ? (\r\n              <Icon\r\n                type=\"check-circle\"\r\n                theme=\"twoTone\"\r\n                twoToneColor=\"#52c41a\"\r\n              />\r\n            ) : (\r\n              <Icon type=\"close-circle\" theme=\"twoTone\" twoToneColor=\"red\" />\r\n            )}\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n    let td = this.props.trainee.traineeDetails;\r\n    return (\r\n      <div\r\n        className=\"answer-table-outer\"\r\n        style={{ width: '80%', margin: 'auto', padding: '50px' }}>\r\n        <Title className=\"answer-table-heading\" level={4}>\r\n          Result\r\n        </Title>\r\n        <div className=\"answer-table-wrapper\">\r\n          <Descriptions bordered title={null} border size=\"small\">\r\n            <Descriptions.Item label=\"Name\">{td.name}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Email Id\">{td.emailid}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Contact\">{td.contact}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Score\">\r\n              {this.state.TotalScore}\r\n            </Descriptions.Item>\r\n          </Descriptions>\r\n          <br />\r\n          <Table\r\n            size=\"small\"\r\n            rowKey=\"qid\"\r\n            loading={this.state.loading}\r\n            columns={columns}\r\n            dataSource={this.state.data}\r\n            pagination={false}\r\n          />\r\n          {this.props.trainee.hasGivenFeedBack ? null : <Feedback />}\r\n          <Modal\r\n            destroyOnClose={true}\r\n            width=\"70%\"\r\n            style={{ top: '30px' }}\r\n            title=\"Question details\"\r\n            visible={this.state.Mvisible}\r\n            onOk={this.handleCancel}\r\n            onCancel={this.handleCancel}\r\n            footer={null}>\r\n            <SingleQuestionDetails qid={this.state.ActiveQuestionId} />\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SingleQuestionDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fetching: false,\r\n      qdetails: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      fetching: true,\r\n    });\r\n    Post({\r\n      url: apis.FETCH_SINGLE_QUESTION_BY_TRAINEE,\r\n      data: {\r\n        qid: this.props.qid,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.data.success) {\r\n          this.setState({\r\n            qdetails: response.data.data[0],\r\n          });\r\n        } else {\r\n          Alert('error', 'Error !', response.data.message);\r\n        }\r\n        this.setState({\r\n          fetching: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          fetching: false,\r\n        });\r\n        console.log(error);\r\n        Alert('error', 'Error !', 'Server Error');\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const optn = ['A', 'B', 'C', 'D', 'E'];\r\n    let Optiondata = this.state.qdetails;\r\n    if (Optiondata !== null) {\r\n      return (\r\n        <div>\r\n          <div className=\"mainQuestionDetailsContaine\">\r\n            <div className=\"questionDetailsBody\">{Optiondata.body}</div>\r\n            {Optiondata.quesimg ? (\r\n              <div className=\"questionDetailsImageContainer\">\r\n                <img\r\n                  alt=\"Unable to load\"\r\n                  className=\"questionDetailsImage\"\r\n                  src={Optiondata.quesimg}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            <div>\r\n              {Optiondata.options.map((d, i) => {\r\n                return (\r\n                  <div key={i}>\r\n                    <Row\r\n                      type=\"flex\"\r\n                      justify=\"center\"\r\n                      className=\"QuestionDetailsOptions\">\r\n                      <Col span={2}>\r\n                        {d.isAnswer ? (\r\n                          <Button className=\"green\" shape=\"circle\">\r\n                            {optn[i]}\r\n                          </Button>\r\n                        ) : (\r\n                          <Button type=\"primary\" shape=\"circle\">\r\n                            {optn[i]}\r\n                          </Button>\r\n                        )}\r\n                      </Col>\r\n                      {d.optimg ? (\r\n                        <Col span={6} style={{ padding: '5px' }}>\r\n                          <img\r\n                            alt=\"Unable to load\"\r\n                            className=\"questionDetailsImage\"\r\n                            src={d.optimg}\r\n                          />\r\n                        </Col>\r\n                      ) : null}\r\n                      {d.optimg ? (\r\n                        <Col span={14}>{d.optbody}</Col>\r\n                      ) : (\r\n                        <Col span={20}>{d.optbody}</Col>\r\n                      )}\r\n                    </Row>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"skeletor-wrapper\">\r\n          <Skeleton active />\r\n          <Skeleton active />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  trainee: state.trainee,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  FeedbackStatus,\r\n})(Answer);\r\n"]},"metadata":{},"sourceType":"module"}