{"ast":null,"code":"var _jsxFileName = \"/home/ducan1406/Documents/kiran_EMS/Online-Examination-System/frontend/src/components/trainee/register/traineeregister.js\";\nimport React, { Component } from 'react';\nimport './trainerRegister.css';\nimport { Row, Col, Form, Icon, Input, Button, Select, Typography } from 'antd';\nimport queryString from 'query-string';\nimport apis from '../../../services/Apis';\nimport { Post, SecurePost } from '../../../services/axiosCall';\nimport Alert from '../../common/alert';\nconst Option = Select.Option;\nconst Title = Typography.Title;\n\nclass TraineeRegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          console.log(this.state.testid);\n          SecurePost({\n            url: apis.REGISTER_TRAINEE_FOR_TEST,\n            data: {\n              username: values.username,\n              name: values.name,\n              emailid: values.email,\n              contact: \"\".concat(values.prefix).concat(values.contact),\n              organisation: values.organisation,\n              testid: this.state.testid,\n              location: values.location\n            }\n          }).then(data => {\n            console.log('Hello World');\n            console.log(data.data);\n\n            if (data.data.success) {\n              this.setState({\n                inform: false,\n                user: data.data.user\n              });\n            } else {\n              this.props.form.resetFields();\n              Alert('error', 'Error!', data.data.message);\n            }\n          }).catch(error => {\n            console.log(error);\n            this.props.form.resetFields();\n            Alert('error', 'Error!', 'Server Error');\n          });\n        }\n      });\n    };\n\n    this.state = {\n      inform: true,\n      testid: null,\n      user: null\n    };\n  }\n\n  componentDidMount() {\n    let params = queryString.parse(this.props.location.search);\n    console.log(params);\n    this.setState({\n      testid: params.testid\n    });\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '+91',\n      rules: [{\n        required: true,\n        message: 'Please enter contact no prefix'\n      }]\n    })(React.createElement(Select, {\n      style: {\n        width: 70\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"+91\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"+91\")));\n    return React.createElement(\"div\", {\n      className: \"trainee-registration-form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.inform ? React.createElement(\"div\", {\n      className: \"trainee-registration-form-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 12,\n      style: {\n        padding: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Name\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, getFieldDecorator('name', {\n      rules: [{\n        required: true,\n        message: 'Please input your name'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }),\n      placeholder: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 12,\n      style: {\n        padding: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Username\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        message: 'Please input your username'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }),\n      placeholder: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 12,\n      style: {\n        padding: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Email Id\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"mail\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }),\n      placeholder: \"Email Id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 12,\n      style: {\n        padding: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Phone Number\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, getFieldDecorator('contact', {\n      rules: [{\n        required: true,\n        message: 'Please input your phone number!'\n      }, {\n        len: 10,\n        message: 'Contact number must be 10 digit long'\n      }]\n    })(React.createElement(Input, {\n      addonBefore: prefixSelector,\n      min: 10,\n      max: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 12,\n      style: {\n        padding: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Organisation\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, getFieldDecorator('organisation', {\n      rules: [{\n        required: true,\n        message: 'Please input your name'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"idcard\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }),\n      placeholder: \"Organisation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 12,\n      style: {\n        padding: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Location\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, getFieldDecorator('location', {\n      rules: [{\n        required: true,\n        message: 'Please input your name'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"home\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }),\n      placeholder: \"Location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 12,\n      style: {\n        paddingTop: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        width: '100%'\n      },\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Register\")))))) : React.createElement(\"div\", {\n      className: \"reasendmail-container-register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Title, {\n      style: {\n        color: '#fff'\n      },\n      level: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"An email containing your test link has been sent to\", ' ', this.state.user.emailid)));\n  }\n\n}\n\nconst TraineeRegister = Form.create({\n  name: 'Trainee Registration'\n})(TraineeRegisterForm);\nexport default TraineeRegister;","map":{"version":3,"sources":["/home/ducan1406/Documents/kiran_EMS/Online-Examination-System/frontend/src/components/trainee/register/traineeregister.js"],"names":["React","Component","Row","Col","Form","Icon","Input","Button","Select","Typography","queryString","apis","Post","SecurePost","Alert","Option","Title","TraineeRegisterForm","constructor","props","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","state","testid","url","REGISTER_TRAINEE_FOR_TEST","data","username","name","emailid","email","contact","prefix","organisation","location","then","success","setState","inform","user","resetFields","message","catch","error","componentDidMount","params","parse","search","render","getFieldDecorator","prefixSelector","initialValue","rules","required","width","padding","color","type","len","paddingTop","TraineeRegister","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './trainerRegister.css';\r\nimport { Row, Col, Form, Icon, Input, Button, Select, Typography } from 'antd';\r\nimport queryString from 'query-string';\r\nimport apis from '../../../services/Apis';\r\nimport { Post, SecurePost } from '../../../services/axiosCall';\r\nimport Alert from '../../common/alert';\r\nconst { Option } = Select;\r\nconst { Title } = Typography;\r\nclass TraineeRegisterForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inform: true,\r\n      testid: null,\r\n      user: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let params = queryString.parse(this.props.location.search);\r\n    console.log(params);\r\n    this.setState({\r\n      testid: params.testid,\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n        console.log(this.state.testid);\r\n        SecurePost({\r\n          url: apis.REGISTER_TRAINEE_FOR_TEST,\r\n          data: {\r\n            username: values.username,\r\n            name: values.name,\r\n            emailid: values.email,\r\n            contact: `${values.prefix}${values.contact}`,\r\n            organisation: values.organisation,\r\n            testid: this.state.testid,\r\n            location: values.location,\r\n          },\r\n        })\r\n          .then((data) => {\r\n            console.log('Hello World');\r\n            console.log(data.data);\r\n            if (data.data.success) {\r\n              this.setState({\r\n                inform: false,\r\n                user: data.data.user,\r\n              });\r\n            } else {\r\n              this.props.form.resetFields();\r\n              Alert('error', 'Error!', data.data.message);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            this.props.form.resetFields();\r\n            Alert('error', 'Error!', 'Server Error');\r\n          });\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const prefixSelector = getFieldDecorator('prefix', {\r\n      initialValue: '+91',\r\n      rules: [{ required: true, message: 'Please enter contact no prefix' }],\r\n    })(\r\n      <Select style={{ width: 70 }}>\r\n        <Option value=\"+91\">+91</Option>\r\n      </Select>\r\n    );\r\n    return (\r\n      <div className=\"trainee-registration-form-wrapper\">\r\n        {this.state.inform ? (\r\n          <div className=\"trainee-registration-form-inner\">\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n              <Row>\r\n                <Col span={12} style={{ padding: '5px' }}>\r\n                  <Form.Item label=\"Name\" hasFeedback>\r\n                    {getFieldDecorator('name', {\r\n                      rules: [\r\n                        { required: true, message: 'Please input your name' },\r\n                      ],\r\n                    })(\r\n                      <Input\r\n                        prefix={\r\n                          <Icon\r\n                            type=\"user\"\r\n                            style={{ color: 'rgba(0,0,0,.25)' }}\r\n                          />\r\n                        }\r\n                        placeholder=\"Name\"\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12} style={{ padding: '5px' }}>\r\n                  <Form.Item label=\"Username\" hasFeedback>\r\n                    {getFieldDecorator('username', {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: 'Please input your username',\r\n                        },\r\n                      ],\r\n                    })(\r\n                      <Input\r\n                        prefix={\r\n                          <Icon\r\n                            type=\"user\"\r\n                            style={{ color: 'rgba(0,0,0,.25)' }}\r\n                          />\r\n                        }\r\n                        placeholder=\"Name\"\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12} style={{ padding: '5px' }}>\r\n                  <Form.Item label=\"Email Id\" hasFeedback>\r\n                    {getFieldDecorator('email', {\r\n                      rules: [\r\n                        {\r\n                          type: 'email',\r\n                          message: 'The input is not valid E-mail!',\r\n                        },\r\n                        {\r\n                          required: true,\r\n                          message: 'Please input your E-mail!',\r\n                        },\r\n                      ],\r\n                    })(\r\n                      <Input\r\n                        prefix={\r\n                          <Icon\r\n                            type=\"mail\"\r\n                            style={{ color: 'rgba(0,0,0,.25)' }}\r\n                          />\r\n                        }\r\n                        placeholder=\"Email Id\"\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12} style={{ padding: '5px' }}>\r\n                  <Form.Item label=\"Phone Number\" hasFeedback>\r\n                    {getFieldDecorator('contact', {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: 'Please input your phone number!',\r\n                        },\r\n                        {\r\n                          len: 10,\r\n                          message: 'Contact number must be 10 digit long',\r\n                        },\r\n                      ],\r\n                    })(\r\n                      <Input addonBefore={prefixSelector} min={10} max={10} />\r\n                    )}\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12} style={{ padding: '5px' }}>\r\n                  <Form.Item label=\"Organisation\" hasFeedback>\r\n                    {getFieldDecorator('organisation', {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: 'Please input your name',\r\n                        },\r\n                      ],\r\n                    })(\r\n                      <Input\r\n                        prefix={\r\n                          <Icon\r\n                            type=\"idcard\"\r\n                            style={{ color: 'rgba(0,0,0,.25)' }}\r\n                          />\r\n                        }\r\n                        placeholder=\"Organisation\"\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12} style={{ padding: '5px' }}>\r\n                  <Form.Item label=\"Location\" hasFeedback>\r\n                    {getFieldDecorator('location', {\r\n                      rules: [\r\n                        { required: true, message: 'Please input your name' },\r\n                      ],\r\n                    })(\r\n                      <Input\r\n                        prefix={\r\n                          <Icon\r\n                            type=\"home\"\r\n                            style={{ color: 'rgba(0,0,0,.25)' }}\r\n                          />\r\n                        }\r\n                        placeholder=\"Location\"\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12} style={{ paddingTop: '5px' }}>\r\n                  <Form.Item>\r\n                    <Button\r\n                      style={{ width: '100%' }}\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      className=\"login-form-button\">\r\n                      Register\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        ) : (\r\n          <div className=\"reasendmail-container-register\">\r\n            <Title style={{ color: '#fff' }} level={4}>\r\n              An email containing your test link has been sent to{' '}\r\n              {this.state.user.emailid}\r\n            </Title>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TraineeRegister = Form.create({ name: 'Trainee Registration' })(\r\n  TraineeRegisterForm\r\n);\r\nexport default TraineeRegister;\r\n"]},"metadata":{},"sourceType":"module"}