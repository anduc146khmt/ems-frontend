{"ast":null,"code":"var _jsxFileName = \"/home/ducan1406/Documents/kiran_EMS/Online-Examination-System/frontend/src/components/basic/login/login.js\";\nimport React from 'react';\nimport { Form, Input, Icon, Button } from 'antd';\nimport './login.css';\nimport { connect } from 'react-redux';\nimport { login, logout } from '../../../actions/loginAction';\nimport auth from '../../../services/AuthServices';\nimport Alert from '../../common/alert';\nimport { Redirect } from 'react-router-dom';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          auth.LoginAuth(values.username, values.password).then(response => {\n            console.log(response);\n\n            if (response.data.success) {\n              this.props.login(response.data.user);\n              auth.storeToken(response.data.token);\n              this.setState({\n                isLoggedIn: true\n              });\n            } else {\n              return Alert('error', 'Error!', response.data.message);\n            }\n          }).catch(error => {\n            console.log(error);\n            return Alert('error', 'Error!', 'Server Error');\n          });\n        }\n      });\n    };\n\n    this.state = {\n      isLoggedIn: false\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n\n    if (this.state.isLoggedIn) {\n      return React.createElement(Redirect, {\n        to: this.props.user.userOptions[0].link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: \"login-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"Username\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(Form.Item, {\n        label: \"Password\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Login\")))));\n    }\n  }\n\n}\n\nconst LoginForm = Form.create({\n  name: 'login'\n})(Login);\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  logout\n})(LoginForm);","map":{"version":3,"sources":["/home/ducan1406/Documents/kiran_EMS/Online-Examination-System/frontend/src/components/basic/login/login.js"],"names":["React","Form","Input","Icon","Button","connect","login","logout","auth","Alert","Redirect","Login","Component","constructor","props","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","LoginAuth","username","password","then","response","data","success","user","storeToken","token","setState","isLoggedIn","message","catch","error","state","render","getFieldDecorator","userOptions","link","color","rules","required","LoginForm","create","name","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Input, Icon, Button } from 'antd';\r\nimport './login.css';\r\nimport { connect } from 'react-redux';\r\nimport { login, logout } from '../../../actions/loginAction';\r\nimport auth from '../../../services/AuthServices';\r\nimport Alert from '../../common/alert';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoggedIn: false,\r\n    };\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n        auth\r\n          .LoginAuth(values.username, values.password)\r\n          .then((response) => {\r\n            console.log(response);\r\n            if (response.data.success) {\r\n              this.props.login(response.data.user);\r\n              auth.storeToken(response.data.token);\r\n              this.setState({\r\n                isLoggedIn: true,\r\n              });\r\n            } else {\r\n              return Alert('error', 'Error!', response.data.message);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            return Alert('error', 'Error!', 'Server Error');\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    if (this.state.isLoggedIn) {\r\n      return <Redirect to={this.props.user.userOptions[0].link} />;\r\n    } else {\r\n      return (\r\n        <div className=\"login-container\">\r\n          <div className=\"login-inner\">\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Item label=\"Username\" hasFeedback>\r\n                {/* {getFieldDecorator('email', {\r\n                  rules: [\r\n                    {\r\n                      type: 'email',\r\n                      message: 'The input is not valid E-mail!',\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: 'Please input your E-mail!',\r\n                    },\r\n                  ],\r\n                })(\r\n                  <Input\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />\r\n                  }\r\n                  placeholder=\"Username\"\r\n                />\r\n                )} */}\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />\r\n                  }\r\n                  placeholder=\"Username\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item label=\"Password\" hasFeedback>\r\n                {getFieldDecorator('password', {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: 'Please input your Password!',\r\n                    },\r\n                  ],\r\n                })(\r\n                  <Input\r\n                    prefix={\r\n                      <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />\r\n                    }\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" block>\r\n                  Login\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst LoginForm = Form.create({ name: 'login' })(Login);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  login,\r\n  logout,\r\n})(LoginForm);\r\n"]},"metadata":{},"sourceType":"module"}